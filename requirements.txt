Complete Excercise

A) Write a small pet project to get into coding again. You might want to use a language as Python which is also good for this Master! The Code can be relatively simple (as a simple game with console output).

B) Make sure each Person has applied the following topics on the code which have been taught in the lecture:

    UML (at least 5 diagrams)
    Metrics (at least two. Sonarcube would be great)
    Clean Code Development (at least 5 points you can show me)
    Continous Delivery (show me your pipeline in e.g. Jenkins and Travis-CI)
    AOP (show me where you could have integrated AOP stuff => the jointpoints)
    DSL (Create a small DSL Demo example snippet in your code even if it does not contribute to your project)
    Functional Programming (prove that you have covered all functional definitions in your code as
        only final data structures
        (mostly) side effect free functions
        the use of higher order functions
        functions as parameters and return values
        use clojures / anonymous functions
    Show me an idea where to use a logical solver in your code and how you would do it!
     Write a little code fragment (like data preparation etc.) in Scala or Clojure!

The complete project must be sent to the lecturer in the last weeks before the semester ends = 8th February 2018! The contribution must include the link to GitHub and 3 pages explaining B (or links to B) as a MarkupPage in GitHub!

Zuletzt ge√§ndert: Freitag, 12. Januar 2018, 19:35